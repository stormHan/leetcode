/*---------------leetcode-----------------
---------------Level : Medium-------------
-----------Sum root to leaf numbers-------
----------------storm Han-----------------
----------------2016.10.11----------------
Question describing:
Given a binary tree containing digits from 0-9 only, each root-to-leaf path could represent a number.

An example is the root-to-leaf path 1->2->3 which represents the number 123.

Find the total sum of all root-to-leaf numbers.

For example,

    1
   / \
  2   3
The root-to-leaf path 1->2 represents the number 12.
The root-to-leaf path 1->3 represents the number 13.

Return the sum = 12 + 13 = 25.
*/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int Visit(TreeNode *cur, int data)
    {
        int ret = 0;
        data = data * 10 + cur->val;
        if(cur->left == NULL && cur->right == NULL)
            return data;
        if(cur->left != NULL)
            ret += Visit(cur->left, data);
        if(cur->right != NULL)
            ret += Visit(cur->right, data);
            
        return ret;
    }

    int sumNumbers(TreeNode* root) {
        int ret = 0;
        if(root == NULL) return 0;
        
        if(root->left == NULL && root->right == NULL)
            return root->val;
        if(root->left != NULL)
            ret += Visit(root->left, root->val);
        if(root->right != NULL)
            ret += Visit(root->right, root->val);
            
        return ret;
        
    }
};
