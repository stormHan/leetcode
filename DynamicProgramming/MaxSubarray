/*---------------leetcode-----------------
---------------Level : Medium-------------
---------------Maximum Subarray-----------
----------------storm Han-----------------
----------------2016.10.15----------------
Question describing:
Find the contiguous subarray within an array (containing at least one number) which has the largest sum.

For example, given the array [-2,1,-3,4,-1,2,1,-5,4],
the contiguous subarray [4,-1,2,1] has the largest sum = 6.
*/

class Solution {
public:
    
    int maxint(int a, int b)
    {
        return (a > b) ? a : b;
    }
    
    int maxSubArray(vector<int>& nums) {
        vector<int> dp(nums.size(), 0);    
        if(nums.size() == 1) return nums[0];
        
        int max = nums[0] - 1;
        dp[0] = nums[0];
        for(int i = 1; i < nums.size(); ++i)
        {
            dp[i] = maxint(dp[ i - 1] + nums[i], nums[i]);
        }
        
        for(int i = 0; i < nums.size(); ++i)
        {
            if(dp[i] > max)
                max = dp[i];
        }
        
        return max;
    }
};
